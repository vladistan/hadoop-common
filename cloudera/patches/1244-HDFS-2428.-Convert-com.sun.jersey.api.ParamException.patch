From 17732eeb34a56135f0bb2023e4ec5b81cd7f8b75 Mon Sep 17 00:00:00 2001
From: Tsz-wo Sze <szetszwo@apache.org>
Date: Thu, 13 Oct 2011 21:08:40 +0000
Subject: [PATCH 1244/1344] HDFS-2428. Convert com.sun.jersey.api.ParamException$QueryParamException to IllegalArgumentException and response it as http BAD_REQUEST in webhdfs.

git-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/branch-0.20-security@1183101 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit eb168c39c7c8c50a1d2d9626abe9e55f8dfe50af)

Author: Tsz-wo Sze
Ref: CDH-4806
---
 src/hdfs/org/apache/hadoop/hdfs/web/JsonUtil.java  |    7 ++++---
 .../hdfs/web/resources/ExceptionHandler.java       |   16 +++++++++++++++-
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/src/hdfs/org/apache/hadoop/hdfs/web/JsonUtil.java b/src/hdfs/org/apache/hadoop/hdfs/web/JsonUtil.java
index 1252876..4710ee4 100644
--- a/src/hdfs/org/apache/hadoop/hdfs/web/JsonUtil.java
+++ b/src/hdfs/org/apache/hadoop/hdfs/web/JsonUtil.java
@@ -98,17 +98,18 @@ public class JsonUtil {
   /** Convert an exception object to a Json string. */
   public static String toJsonString(final Exception e) {
     final Map<String, Object> m = new TreeMap<String, Object>();
-    m.put("className", e.getClass().getName());
+    m.put("exception", e.getClass().getSimpleName());
     m.put("message", e.getMessage());
+    m.put("javaClassName", e.getClass().getName());
     return toJsonString(RemoteException.class, m);
   }
 
   /** Convert a Json map to a RemoteException. */
   public static RemoteException toRemoteException(final Map<?, ?> json) {
     final Map<?, ?> m = (Map<?, ?>)json.get(RemoteException.class.getSimpleName());
-    final String className = (String)m.get("className");
     final String message = (String)m.get("message");
-    return new RemoteException(className, message);
+    final String javaClassName = (String)m.get("javaClassName");
+    return new RemoteException(javaClassName, message);
   }
 
   private static String toJsonString(final Class<?> clazz, final Object value) {
diff --git a/src/hdfs/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java b/src/hdfs/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java
index 8a04c4a..fdc66f3 100644
--- a/src/hdfs/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java
+++ b/src/hdfs/org/apache/hadoop/hdfs/web/resources/ExceptionHandler.java
@@ -29,17 +29,28 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.hdfs.web.JsonUtil;
 
+import com.sun.jersey.api.ParamException;
+
 /** Handle exceptions. */
 @Provider
 public class ExceptionHandler implements ExceptionMapper<Exception> {
   public static final Log LOG = LogFactory.getLog(ExceptionHandler.class);
 
   @Override
-  public Response toResponse(final Exception e) {
+  public Response toResponse(Exception e) {
     if (LOG.isTraceEnabled()) {
       LOG.trace("GOT EXCEPITION", e);
     }
 
+    //Convert exception
+    if (e instanceof ParamException) {
+      final ParamException paramexception = (ParamException)e;
+      e = new IllegalArgumentException("Invalid value for webhdfs parameter \""
+          + paramexception.getParameterName() + "\": "
+          + e.getCause().getMessage(), e);
+    } 
+
+    //Map response status
     final Response.Status s;
     if (e instanceof SecurityException) {
       s = Response.Status.UNAUTHORIZED;
@@ -49,7 +60,10 @@ public class ExceptionHandler implements ExceptionMapper<Exception> {
       s = Response.Status.FORBIDDEN;
     } else if (e instanceof UnsupportedOperationException) {
       s = Response.Status.BAD_REQUEST;
+    } else if (e instanceof IllegalArgumentException) {
+      s = Response.Status.BAD_REQUEST;
     } else {
+      LOG.warn("INTERNAL_SERVER_ERROR", e);
       s = Response.Status.INTERNAL_SERVER_ERROR;
     }
  
-- 
1.7.0.4

